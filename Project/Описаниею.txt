Описание структуры закодированного файла для алгоритма Хаффмана

Файл, созданный с использованием алгоритма Хаффмана, состоит из двух основных частей:
1. Словарь частот символов

Словарь представляет собой отображение (map), где каждому символу сопоставлена его частота появления в исходном тексте. Эта информация используется для построения дерева Хаффмана.

Формат хранения:

    Словарь записывается в виде строки, которая затем сохраняется в файл.
    Пример строки:

    {a=5, b=3, c=2}

    Здесь a, b, c — символы, а 5, 3, 2 — их частоты.

2. Закодированные данные

Данные хранятся в закодированном бинарном виде, где каждому символу соответствует уникальная последовательность битов, полученная из дерева Хаффмана.

Формат хранения:

    Закодированная строка хранится в текстовом виде, представляя последовательность символов '0' и '1'.
    Пример строки:

    0100110111

Здесь 0 и 1 — это путь по дереву Хаффмана, где 0 означает переход влево, а 1 — переход вправо.
Пример содержимого закодированного файла

Если исходный текст:

aaaabbc

1. Словарь частот:

{a=4, b=2, c=1}

2. Построенное дерево Хаффмана:

      (*, 7)
     /     \
   (a, 4)  (*, 3)
          /     \
        (b, 2)  (c, 1)

3. Закодированные символы:

    a = 0
    b = 10
    c = 11

4. Закодированная строка:

0000101011

Содержимое файла encoded.huff:

{a=4, b=2, c=1}
0000101011

Как декодировать данные

    Прочитать словарь частот символов.
    Построить дерево Хаффмана.
    Расшифровать закодированную строку, проходя по дереву Хаффмана от корня к листовым узлам.

Пример текстового файла 

### Описание структуры файла encoded.huff

1. Словарь частот:
{a=4, b=2, c=1}

2. Закодированная строка:
0000101011

### Расшифровка

Исходный текст:
aaaabbc